Filename,Page,Keyword,Sentence
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"“History of Java Programming Language”
Free Java Guide & Tutorials
Java is an object-oriented programming language developed by James Gosling and
colleagues at Sun Microsystems in the early 1990s."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,programming,"“History of Java Programming Language”
Free Java Guide & Tutorials
Java is an object-oriented programming language developed by James Gosling and
colleagues at Sun Microsystems in the early 1990s."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,history,"“History of Java Programming Language”
Free Java Guide & Tutorials
Java is an object-oriented programming language developed by James Gosling and
colleagues at Sun Microsystems in the early 1990s."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Unlike conventional languages
which are generally designed either to be compiled to native (machine) code, or to be
interpreted from source code at runtime, Java is intended to be compiled to a bytecode,
which is then run (generally using JIT compilation) by a Java Virtual Machine."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Java is only distantly related to JavaScript, though
they have similar names and share a C-like syntax."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"History
Java was started as a project called ""Oak"" by James Gosling in June 1991."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,history,"History
Java was started as a project called ""Oak"" by James Gosling in June 1991."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"The first public
implementation was Java 1.0 in 1995."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"New versions for large and small platforms (J2EE and
J2ME) soon were designed with the advent of ""Java 2""."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Sun has not announced any
plans for a ""Java 3""."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"In 1997, Sun approached the ISO/IEC JTC1 standards body and later the Ecma
International to formalize Java, but it soon withdrew from the process."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Java remains a
proprietary de facto standard that is controlled through the Java Community Process."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Sun makes most of its Java implementations available without charge, with revenue
being generated by specialized products such as the Java Enterprise System."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Philosophy
There were five primary goals in the creation of the Java language:
1."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,programming,It should use the object-oriented programming methodology.
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,java,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,1,history,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"To achieve the goals of networking support and remote code execution, Java
programmers sometimes find it necessary to use extensions such as CORBA, Internet
Communications Engine, or OSGi."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,programming,"Object orientation
The first characteristic, object orientation (""OO""), refers to a method of programming
and language design."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,programming,"Another primary goal of OO programming is to develop more generic objects so that
software can become more reusable between projects."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"Platform independence
The second characteristic, platform independence, means that programs written in the
Java language must run similarly on diverse hardware."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"This is achieved by most Java compilers by compiling the Java language code
""halfway"" to bytecode (specifically Java bytecode)—simplified machine instructions
specific to the Java platform."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"The code is then run on a virtual machine (VM), a program
written in native code on the host hardware that interprets and executes generic Java
bytecode."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"Note that,
although there's an explicit compiling stage, at some point, the Java bytecode is
interpreted or converted to native machine instructions by the JIT compiler."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,java,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,2,history,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"There are also implementations of Java compilers that compile to native object code,
such as GCJ, removing the intermediate bytecode stage, but the output of these
compilers can only be run on a single architecture."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Sun's license for Java insists that all implementations be ""compatible""."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"In response, Microsoft no longer ships Java with Windows, and in recent versions
of Windows, Internet Explorer cannot support Java applets without a third-party plug-in."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"However, Sun and others have made available Java run-time systems at no cost for
those and other versions of Windows."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Another technique, known as just-in-time compilation (JIT),
translates the Java bytecodes into native code at the time that the program is run which
results in a program that executes faster than interpreted code but also incurs
compilation overhead during execution."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"JIT compilation and dynamic recompilation allow Java programs to take
advantage of the speed of native code without losing portability."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Portability is a technically difficult goal to achieve, and Java's success at that goal has
been mixed."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Although it is indeed possible to write programs for the Java platform that
behave consistently across many host platforms, the large number of available
platforms with small errors or inconsistencies led some to parody Sun's ""Write once, run
anywhere"" slogan as ""Write once, debug everywhere""."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Platform-independent Java is however very successful with server-side applications,
such as Web services, servlets, and Enterprise JavaBeans, as well as with Embedded
systems based on OSGi, using Embedded Java environments."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"Automatic garbage collection
One idea behind Java's automatic memory management model is that programmers
should be spared the burden of having to perform manual memory management."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,java,"In
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,3,history,"In
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"In Java, this potential problem is avoided by automatic garbage collection."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"The
programmer determines when objects are created, and the Java runtime is responsible
for managing the object's lifecycle."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"When no references to an object remain, the Java garbage collector
automatically deletes the unreachable object, freeing memory and preventing a memory
leak."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,programming,The use of garbage collection in a language can also affect programming paradigms.
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,programming,The use of transient immutable value-objects minimizes side-effect programming.
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"Comparing Java and C++, it is possible in C++ to implement similar functionality (for
example, a memory management model for specific classes can be designed in C++ to
improve speed and lower memory fragmentation considerably), with the possible cost of
extra development time and some application complexity."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"In Java, garbage collection is
built-in and virtually invisible to the developer."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"Syntax
The syntax of Java is largely derived from C++."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"However, unlike C++, which combines
the syntax for structured, generic, and object-oriented programming, Java was built from
the ground up to be virtually fully object-oriented: everything in Java is an object with the
exceptions of atomic datatypes (ordinal and real numbers, boolean values, and
characters) and everything in Java is written inside a class."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,programming,"However, unlike C++, which combines
the syntax for structured, generic, and object-oriented programming, Java was built from
the ground up to be virtually fully object-oriented: everything in Java is an object with the
exceptions of atomic datatypes (ordinal and real numbers, boolean values, and
characters) and everything in Java is written inside a class."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,java,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,4,history,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"Applet
Java applets are programs that are embedded in other applications, typically in a Web
page displayed in a Web browser."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"// Hello.java
import java.applet.Applet;
import java.awt.Graphics;
public class Hello extends Applet {
public void paint(Graphics gc) {
gc.drawString(""Hello, world!"
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"This is a slightly better example of using Java's OO features in that the
class explicitly extends the basic ""Applet"" class, that it overrides the ""paint"" method and
that it uses import statements."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"Servlet
Java servlets are server-side Java EE components that generate responses to requests
from clients."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"// Hello.java
import java.io."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"*;
import javax.servlet."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,java,"*;
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,5,history,"*;
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,6,java,""");
pw.close();
}
}
The import statements direct the Java compiler to include all of the public classes and
interfaces from the java.io and javax.servlet packages in the compilation."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,6,java,"Swing application
Swing is the advanced graphical user interface library for the Java SE platform."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,6,java,"// Hello.java
import javax.swing."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,6,java,"""));
pack();
}
public static void main(String[] args) {
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,6,history,"""));
pack();
}
public static void main(String[] args) {
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"new Hello().setVisible(true);
}
}
The import statement directs the Java compiler to include all of the public classes and
interfaces from the javax.swing package in the compilation."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"Look and feel
The default look and feel of GUI applications written in Java using the Swing toolkit is
very different from native applications."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"Though prior implementations of these look and feels have been considered lacking,
Swing in Java SE 6 addresses this problem by using more native widget drawing
routines of the underlying platforms."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"Lack of OO purity and facilities
Java's primitive types are not objects."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"This was a conscious decision by Java's
designers for performance reasons."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"Because of this, Java is not considered to be a
pure object-oriented programming language."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,programming,"Because of this, Java is not considered to be a
pure object-oriented programming language."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,java,"However, as of Java 5.0, autoboxing
enables programmers to write as if primitive types are their wrapper classes, and freely
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,7,history,"However, as of Java 5.0, autoboxing
enables programmers to write as if primitive types are their wrapper classes, and freely
Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,8,java,"Java designers decided not to
implement certain features present in other OO languages, including:
* multiple inheritance
* operator overloading
* class properties
* tuples
Java Runtime Environment
The Java Runtime Environment or JRE is the software required to run any application
deployed on the Java Platform."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,8,java,"Sun also distributes a superset of the JRE called the Java 2
SDK (more commonly known as the JDK), which includes development tools such as
the Java compiler, Javadoc, and debugger."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,8,java,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
CS-101-1.3.1_History-of-Java-Programming-Language.pdf,8,history,"Source URL: http://www.freejavaguide.com/history.html
Saylor URL: http://www.saylor.org/courses/cs101/#1.3.1
© Freejavaguide.com Saylor.org
Used by permission."
interface and abstract class.pdf,1,java,"Interface in Java
An interface in Java is a blueprint of a class."
interface and abstract class.pdf,1,java,The interface in Java is a mechanism to achieve abstraction.
interface and abstract class.pdf,1,java,"There can be only abstract
methods in the Java interface, not method body."
interface and abstract class.pdf,1,java,"It is used to achieve abstraction and
multiple inheritance in Java."
interface and abstract class.pdf,1,java,Java Interface also represents the IS-A relationship.
interface and abstract class.pdf,1,java,"Uses of Java interface
There are mainly three reasons to use interface."
interface and abstract class.pdf,6,java,"{
void show();
}
class C implements B
{
public void display()
{
System.out.println(""Hello"");
}
public void show()
{
System.out.println(""Welcome"");
}
}
Class MainClass
{
public static void main(String args[])
{
C obj = new C();
obj.display();
obj.show();
}
}
Output:
Hello
Welcome
Abstract class in Java"
interface and abstract class.pdf,8,java,"Since Java
abstract methods."
interface and abstract class.pdf,9,java,6) An abstract class can extend another Java An interface can extend another Java interface only.
interface and abstract class.pdf,9,java,class and implement multple Java interfaces.
interface and abstract class.pdf,9,java,8) A Java abstract class can have class members Members of a Java interface are public by default.
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"Programming and Problem Solving through C Language
O Level / A Level
Chapter -1 : Introduction to Programming
Programming Language - Introduction
A programming language is a set of symbols, grammars and rules with the help of which one is
able to translate algorithms to programs that will be executed by the computer."
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"The programmer
communicates with a machine using programming languages."
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,The primary classifications of programming languages are: Machine Languages.
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"Machine level
language is a language that supports the machine side of the programming or does not provide
human side of the programming."
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"An assembler is useful for detecting
programming errors."
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"Assembly
language encourage modular programming
High level language
High level language is a language that supports the human and the application sides of the
programming."
OLevel_2_B4_CLang_26Mar_SS.pdf,1,programming,"Consequently more
programming is now done in high level languages."
